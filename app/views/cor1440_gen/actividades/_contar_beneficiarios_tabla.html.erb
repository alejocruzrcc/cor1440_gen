<% sumcol = {} %>
    p.sexo AS persona_sexo,

<% cotejador = TwitterCldr::Collation::Collator.new(:es) %>
<% contarb_personas = @contarb_asistencia_ram.map{|r|
  [r['persona_nombre'] +
   (r['persona_identificacion'] != '' ? ' (' +
    r['persona_identificacion'] + ')' : ''
   ), r['persona_id'], r['persona_sexo']
  ]}.uniq.sort {|a,b| cotejador.compare(a[0].downcase, b[0].downcase)} %>

<table class="table table-striped">
  <thead>
    <tr>
      <th>
        Beneficiario
      </th>
      <th>
        Sexo
      </th>
      <th>
        Rango(s) de edad
      </th>
      <% @contarb_listaac.each do |a| %>
        <th>
          <%= a.presenta_id_larga %>
          <% sumcol[a.id] = 0 %>
        </th>
      <% end %>
    </tr>
    <tr>
      <th>
        <% # no usamos f porque esta parte es también llamada por AJAX,
          # asi que no estará disponible el formulario %>
        <%= collection_select(
          nil,
          'filtro_buspersona_id',
          contarb_personas,
          lambda {|t| t[1]},
          :first,
          {
            include_blank: true,
            selected: Sip::ModeloHelper.poromision(params, :buspersona_id) },
          {
              class: 'chosen-select',
              name: 'filtro[buspersona_id]',
              'data-enviarautomatico' => ''
            })
          %>

        <!--%= f.input :buspersona_id,
          collection: contarb_personas,
          label: false,
          include_blank: true,
          selected: Sip::ModeloHelper.poromision(params, :buspersona_id),
          input_html: {
          class: 'chosen-select',
          'data-enviarautomatico' => ''
        } %-->
      </th>
      <th>
        <%= collection_select(
          nil,
          'filtro_bussexo',
          Sip::SexoGeneroHelper::SEXO_OPCIONES,
          :last, 
          :first, 
          {
            include_blank: true,
            selected: Sip::ModeloHelper.poromision(params, :bussexo) },
          {
              class: 'chosen-select',
              name: 'filtro[bussexo]',
              'data-enviarautomatico' => ''
            })
          %>


        <!--%= f.input :bussexo,
          collection: Sip::SexoGeneroHelper::SEXO_OPCIONES,
          label: false,
          include_blank: true,
          selected: Sip::ModeloHelper.poromision(params, :bussexo),
          input_html: {
          class: 'chosen-select',
          'data-enviarautomatico' => ''
        } %-->
      </th>
      <th>
        <%= collection_select(
          nil,
          'filtro_busrangoedad_id',
          Cor1440Gen::Rangoedadac.habilitados,
          :id, 
          :nombre, 
          {
            include_blank: true,
            selected: Sip::ModeloHelper.poromision(params, :busrangoedad_id)},
          {
              class: 'chosen-select',
              name: 'filtro[busrangoedad_id]',
              'data-enviarautomatico' => ''
            })
          %>

        <!--%= f.input :busrangoedad_id,
          collection: Cor1440Gen::Rangoedadac.habilitados,
          label: false,
          value_method: :id,
          label_method: :presenta_nombre,
          include_blank: true,
          selected: Sip::ModeloHelper.poromision(params, :busrangoedad_id),
          input_html: {
            class: 'chosen-select',
            'data-enviarautomatico' => ''
          } %-->
      </th>
      <% @contarb_listaac.each do |a| %>
        <th>
        </th>
      <% end %>
    </tr>

  </thead>
  <tbody>


    <% contarb_personas.each do |b| %>
      <!--% asg = Cor1440Gen::Asistencia.where(
        'persona_id=?', b.id).where(
          'actividad_id IN (?)', @contarb_actividad.select(:id))
        %-->
      <% asg2 = @contarb_asistencia_ram.select{|r| r['persona_id'] == b[1]} %>
      <% asg2_actividad_ids = asg2.map{|r| r['actividad_id']} %>
      <!--% fechas = Cor1440Gen::Actividad.where(id: asg.select(:actividad_id)).
        pluck(:fecha).uniq %-->
      <% fechas = asg2.map{|r| r['actividad_fecha']}.uniq %>
      <!--Cor1440Gen::Actividad.where(id: asg2_actividad_ids).
        pluck(:fecha).uniq -->
      <% rangosedad = asg2.map{|r| r['edad_actividadactividad_fecha']}.uniq.each {|e|
        cr = Sivel2Gen::RangoedadHelper.buscar_rango_edad(
          e, 'Cor1440Gen::Rangoedadac')
        ret = cr>=0 ? Cor1440Gen::Rangoedadac.find(cr).nombre : ''
        ret }.uniq.join("; ") %>
      <tr>
        <td>
          <%= b[0] %> <!-- nombre -->
        </td>
        <td>
          <%= b[2] %> <!-- sexo -->
        </td>
        <td>
          <%= rangosedad %>
        </td>

        <% @contarb_listaac.each do |a| %>
          <td>
            <!--% consb = @contarb_actividad.where('cor1440_gen_actividad.id IN
          (SELECT actividad_id FROM cor1440_gen_actividad_actividadpf
           WHERE actividadpf_id=?)',a.id) %-->
            <!--% consas = Cor1440Gen::Asistencia.where(
               'persona_id=?', b.id).where(
               'actividad_id IN (?)', consb.select(:id)) %-->
            <% consas2 = asg2.select{|r| r['actividadpf_id'] == a.id} %>
            <% totconsas = consas2.count %>
            <% if totconsas > 0 %>
              <% #byebug %>
            <% end %>
            <%= totconsas %>
            <% sumcol[a.id] += totconsas %>
          </td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
  <tfoot>
    <tr>
      <th colspan='3'>Totales
      (<%= contarb_personas.count %> beneficiarios):</th>
      <% @contarb_listaac.each do |a| %>
        <th>
          <%= sumcol[a.id] %>
        </th>
      <% end %>
    </tr>
  </tfoot>

</table>
